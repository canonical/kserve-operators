# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
skipsdist = True
skip_missing_interpreters = True
envlist = lint, unit

[vars]
src_path = {toxinidir}/src/
tst_path = {toxinidir}/tests/
;lib_path = {toxinidir}/lib/charms/operator_name_with_underscores
all_path = {[vars]src_path} {[vars]tst_path}

[testenv]
setenv = 
	PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
	PYTHONBREAKPOINT=ipdb.set_trace
	PY_COLORS=1
passenv = 
	PYTHONPATH
	CHARM_BUILD_DIR
	MODEL_SETTINGS
deps = 
	poetry>=2.1.3

[testenv:update-requirements]
commands = 
	# updating all groups' locked dependencies:
	poetry lock --regenerate
description = Update requirements
skip_install = true

[testenv:fmt]
description = Apply coding style standards to code
commands = 
	isort {[vars]all_path}
	black {[vars]all_path}
commands_pre = 
	poetry install --only fmt
skip_install = true

[testenv:lint]
description = Check code against coding style standards
commands = 
	# uncomment the following line if this charm owns a lib
	# codespell {[vars]lib_path}
	codespell {toxinidir}/. --skip {toxinidir}/.git --skip {toxinidir}/.tox \
	--skip {toxinidir}/build --skip {toxinidir}/./lib --skip {toxinidir}/./venv \
	--skip {toxinidir}/.mypy_cache --skip {toxinidir}/icon.svg \
	--skip *.json.tmpl --skip *.j2 \
	--skip *.lock
	# pflake8 wrapper supports config from pyproject.toml
	pflake8 {[vars]all_path}
	isort --check-only --diff {[vars]all_path}
	black --check --diff {[vars]all_path}
commands_pre = 
	poetry install --only lint
skip_install = true

[testenv:unit]
description = Run unit tests
commands = 
	coverage run --source={[vars]src_path} \
	-m pytest --ignore={[vars]tst_path}integration -vv --tb native {posargs}
	coverage report
	coverage xml
commands_pre = 
	poetry install --only unit,charm
skip_install = true

[testenv:tflint]
allowlist_externals = 
	tflint
commands = 
	tflint --chdir=terraform --recursive
description = Check Terraform code against coding style standards

[testenv:integration]
description = Run integration tests
commands = 
	pytest -v --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs}
commands_pre = 
	poetry install --only integration
skip_install = true
