apiVersion: v1
data:
  agent: |-
    {
        "image" : "{{ configmap__agent }}",
        "memoryRequest": "100Mi",
        "memoryLimit": "1Gi",
        "cpuRequest": "100m",
        "cpuLimit": "1"
    }
  batcher: |-
    {
        "image" : "{{ configmap__batcher }}",
        "memoryRequest": "1Gi",
        "memoryLimit": "1Gi",
        "cpuRequest": "1",
        "cpuLimit": "1",
        "maxBatchSize": "32",
        "maxLatency": "5000"
    }
  credentials: |-
    {
       "storageSpecSecretName": "storage-config",
       "storageSecretNameAnnotation": "serving.kserve.io/storageSecretName",
       "gcs": {
           "gcsCredentialFileName": "gcloud-application-credentials.json"
       },
       "s3": {
           "s3AccessKeyIDName": "AWS_ACCESS_KEY_ID",
           "s3SecretAccessKeyName": "AWS_SECRET_ACCESS_KEY",
           "s3Endpoint": "",
           "s3UseHttps": "",
           "s3Region": "",
           "s3VerifySSL": "",
           "s3UseVirtualBucket": "",
           "s3UseAccelerate": "",
           "s3UseAnonymousCredential": "",
           "s3CABundle": ""
       }
    }
  deploy: |-
    {
      "defaultDeploymentMode": "{{ deployment_mode }}"
    }
  explainers: |-
    {
        "art": {
            "image" : "{{ configmap__explainers__art__image }}",
            "defaultImageVersion": "{{ configmap__explainers__art__version }}"
        }
    }
  inferenceService: |-
    {
      "resource": {
          "cpuLimit": "1",
          "memoryLimit": "2Gi",
          "cpuRequest": "1",
          "memoryRequest": "2Gi"
        }
    }
  ingress: |-
    {
      "enableGatewayApi": false,
      "kserveIngressGateway": "kserve/kserve-ingress-gateway",
      "ingressGateway" : "{{ ingress_gateway_namespace }}/{{ ingress_gateway_name }}",
      "ingressDomain"  : "{{ ingress_domain}}",
      "ingressClassName" : "istio",
      {% if local_gateway_namespace and local_gateway_name -%}
      "localGateway" : "{{ local_gateway_namespace }}/{{ local_gateway_name }}",
      "localGatewayService" : "{{ local_gateway_service_name }}.{{ ingress_gateway_namespace}}.svc.cluster.local",
      {%- endif %}
      "urlScheme": "http"
    }
  logger: |-
    {
        "image" : "{{ configmap__logger }}",
        "memoryRequest": "100Mi",
        "memoryLimit": "1Gi",
        "cpuRequest": "100m",
        "cpuLimit": "1",
        "defaultUrl": "http://default-broker"
    }
  metricsAggregator: |-
    {
      "enableMetricAggregation": "true",
      "enablePrometheusScraping" : "true"
    }
  opentelemetryCollector: |-
    {
      "scrapeInterval": "5s",
      "metricReceiverEndpoint": "keda-otel-scaler.keda.svc:4317",
      "metricScalerEndpoint": "keda-otel-scaler.keda.svc:4318"
    }
  router: |-
    {
        "image" : "{{ configmap__router }}",
        "memoryRequest": "100Mi",
        "memoryLimit": "1Gi",
        "cpuRequest": "100m",
        "cpuLimit": "1",
        "imagePullPolicy": "IfNotPresent"
    }
  security: |-
    {
      "autoMountServiceAccountToken": true
    }
  storageInitializer: |-
    {
        "image" : "{{ configmap__storageInitializer }}",
        "memoryRequest": "100Mi",
        "memoryLimit": "1Gi",
        "cpuRequest": "100m",
        "cpuLimit": "1",
        "caBundleConfigMapName": "",
        "caBundleVolumeMountPath": "/etc/ssl/custom-certs",
        "enableDirectPvcVolumeMount": true,
        "enableModelcar": false,
        "cpuModelcar": "10m",
        "memoryModelcar": "15Mi"
    }
kind: ConfigMap
metadata:
  name: inferenceservice-config
  namespace: {{ namespace }}
