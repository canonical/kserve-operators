[flake8]
max-line-length = 100

[tox]
skipsdist = True
envlist = {controller,web-app}-{unit,lint,integration},integration

[vars]
all_path = {[vars]src_path} {[vars]tst_path}
src_path = {toxinidir}/src/
tst_path = {toxinidir}/tests/

[testenv]
allowlist_externals =
  tox
setenv =
  controller: CHARM = controller
  web-app: CHARM = web-app
  unit: TYPE = unit
  lint: TYPE = lint
  integration: TYPE = integration
commands =
  tox -c charms/kserve-{env:CHARM} -e {env:TYPE}

[testenv:update-requirements]
allowlist_externals =
    bash
    find
    pip-compile
    xargs
commands = 
; uses 'bash -c' because piping didn't work in regular tox commands
  pip-compile requirements-fmt.in
  bash -c 'find . -type f -name "requirements*.in" | xargs --replace=\{\} pip-compile --resolver=backtracking \{\}'
deps =
    pip-tools
description = Update requirements files by executing pip-compile on all requirements*.in files, including those in subdirs.

[testenv:fmt]
commands =
    isort {[vars]tst_path}
    black {[vars]tst_path}
deps =
    -r requirements-fmt.txt
description = Apply coding style standards to code

[testenv:lint]
commands =
    # uncomment the following line if this charm owns a lib
    # codespell {[vars]lib_path}
    codespell {toxinidir}/. --skip {toxinidir}/./.git --skip {toxinidir}/./.tox \
      --skip {toxinidir}/./build --skip {toxinidir}/./lib --skip {toxinidir}/./venv \
      --skip {toxinidir}/./.mypy_cache --skip {toxinidir}/./charms \
      --skip {toxinidir}/./icon.svg --skip *.json.tmpl
    # pflake8 wrapper supports config from pyproject.toml
    pflake8 {[vars]tst_path}
    isort --check-only --diff {[vars]tst_path}
    black --check --diff {[vars]tst_path}
deps =
    -r requirements-lint.txt
description = Check code against coding style standards

[testenv:integration]
whitelist_externals = tox
passenv =
  HOME
  DISPLAY
deps =
  -r requirements-integration.txt
commands = pytest -vvs --tb native --show-capture=no --log-cli-level=INFO --asyncio-mode=auto {posargs} {toxinidir}/charms/kserve-{env:CHARM}
